digraph RBN {
    W [label="OpenShift Worker", func="one(OpenShift Worker) & one(OpenShift Cluster)", instances=8];
    C [label="OpenShift Cluster", func="copy", instances=2];

    H [label="Health", func="one", instances=1];
    D [label="Distributor", func="one(OpenShift Worker) & one(Ingester)", instances=2];
    I [label="Ingester", func="copy", instances=2];

    H -> D [label="1 to n"];
    H -> D2 [label="1 to n"];
    D -> I [label="1 to n"];
    I -> I [label="1 to self"];

    D -> W [label="1 to 1"];
    I -> W [label="1 to 1"];

    W -> W [label="1 to self"];
    W -> C [label="1 to 1"];
    C -> C [label="1 to self"];


    W2 [label="OpenShift Worker2", func="one(OpenShift Worker2) & one(OpenShift Cluster2)", instances=8];
    C2 [label="OpenShift Cluster2", func="copy", instances=2];

    D2 [label="Distributor2", func="one(OpenShift Worker2) & one(Ingester2)", instances=2];
    I2 [label="Ingester2", func="copy", instances=2];

    D2 -> I2 [label="1 to n"];
    I2 -> I2 [label="1 to self"];

    D2 -> W2 [label="1 to 1"];
    I2 -> W2 [label="1 to 1"];

    W2 -> W2 [label="1 to self"];
    W2 -> C2 [label="1 to 1"];
    C2 -> C2 [label="1 to self"];
}

